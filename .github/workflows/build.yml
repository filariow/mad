name: build

on:
  push:
    tags:
    - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - shell: bash
        run: |
          echo "${{ steps.create_release.outputs.upload_url }}" > upload_url.txt
      - name: Upload artifact release url
        uses: actions/upload-artifact@v1
        with:
          name: upload_url
          path: upload_url.txt

  build:
    name: Build
    needs: [release]
    strategy:
      matrix:
        os: ["linux"]
        arch: ["amd64"]
    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}
    steps:
    - name: Download math result for job 1
      uses: actions/download-artifact@v1
      with:
        name: upload_url
    - shell: bash
      run: |
        value=`cat upload_url/upload_url.txt`
        echo "UPLOAD_URL=$value" >> $GITHUB_ENV
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build
      run: |
        mkdir -p bin
        export DOCKER_BUILDKIT=1
        docker build --tag builder --build-arg=GOOS=${{env.GOOS}} --build-arg=GOARCH=${{env.GOARCH}} .
        docker run -v $(realpath ./bin):/app/bin builder
    - name: Build
      run: |
          pushd bin
          zip mad.zip mad
          popd
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.UPLOAD_URL }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./bin/mad.zip
        asset_name: mad-${{env.GOOS}}-${{env.GOARCH}}.zip
        asset_content_type: application/zip


